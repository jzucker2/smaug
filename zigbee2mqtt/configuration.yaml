# Enable the Zigbee2MQTT frontend
frontend:
  # Optional, default 8080
  port: 8080

homeassistant:
  # Optional: Home Assistant discovery topic (default: shown below)
  discovery_topic: 'homeassistant'
  # Optional: Home Assistant status topic (default: shown below)
  # Note: in addition to the `status_topic`, 'homeassistant/status' will also be used
  status_topic: 'hass/status'
  # Optional: Home Assistant legacy entity attributes, (default: shown below), when enabled:
  # Zigbee2MQTT will send additional states as attributes with each entity. For example,
  # A temperature & humidity sensor will have 2 entities for the temperature and
  # humidity, with this setting enabled both entities will also have
  # an temperature and humidity attribute.
  # Note: Disabling this option, requires a Home Assistant restart
  legacy_entity_attributes: true
  # Optional: Home Assistant legacy triggers (default: shown below), when enabled:
  # - Zigbee2mqt will send an empty 'action' or 'click' after one has been send
  # - A 'sensor_action' and 'sensor_click' will be discoverd
  legacy_triggers: true

# Let Zigbee2MQTT generate a new network key on first start
# https://github.com/Koenkk/zigbee2mqtt/issues/16188
# most of below is from a reset: https://github.com/Koenkk/zigbee2mqtt/blob/0cbbf400401e7f2ed0a139178f0097ece66c6fd3/lib/controller.ts#L111-L118
advanced:
  # Let Zigbee2MQTT generate a network key on first start
  network_key: GENERATE
  # Let Zigbee2MQTT generate a pan_id on first start
  pan_id: GENERATE
  # Let Zigbee2MQTT generate a ext_pan_id on first start
  ext_pan_id: GENERATE
  homeassistant_legacy_entity_attributes: false
  legacy_api: false
  # https://www.zigbee2mqtt.io/guide/configuration/device-availability.html#availability-payload
  # Whether to use legacy mode for the availability message payload (default: true)
  # true = online/offline
  # false = {"state":"online"} / {"state":"offline"}
  legacy_availability_payload: false

# https://www.zigbee2mqtt.io/guide/configuration/devices-groups.html
device_options:
  legacy: false

devices:
  '0x00158d00090d9eaa':
    friendly_name: Magic Cube
    description: This is an Aqara Magic Cube

# does not seem to work though
# https://www.zigbee2mqtt.io/guide/configuration/devices-groups.html#extract-config-to-separate-files
# Define the files which contains the configs
#devices: 'devices.yaml'
